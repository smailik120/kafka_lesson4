version: '3'
services:
 kafka-java:
   container_name: kafka-java
   image: openjdk:11-jre-slim
   volumes:
     - ./kafka-0.1.jar:/kafka.jar
   ports:
     - "8080:8080"
   entrypoint: java -jar kafka.jar
 prometheus:
   image: prom/prometheus:latest
   volumes:
     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
   ports:
     - '9090:9090'
 grafana:
   image: grafana/grafana:latest
   volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
     - ./grafana/config.ini:/etc/grafana/config.ini
     - ./grafana/dashboards:/var/lib/grafana/dashboards
   environment:
     - GF_SECURITY_ADMIN_PASSWORD=admin
   depends_on:
     - prometheus
   ports:
     - '3000:3000'
 kafka-exporter:
   container_name: kafka-exporter
   image: danielqsj/kafka-exporter
   restart: unless-stopped
   command: ["--kafka.server=broker:9092"]
   ports:
     - "9308:9308"
   logging:
       driver: "json-file"
       options:
         max-size: "5m"
 zookeeper:
   ports:
     - "2181:2181"
   image: confluentinc/cp-zookeeper:7.0.1
   container_name: zookeeper
   environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000

 broker:
   image: confluentinc/cp-kafka:7.0.1
   container_name: broker
   ports:
     - "9092:9092"
   depends_on:
     - zookeeper
   environment:
     KAFKA_BROKER_ID: 1
     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1